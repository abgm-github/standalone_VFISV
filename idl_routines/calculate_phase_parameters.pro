PRO calculate_phase_parameters,num_lambda_filter,hcme1,hcmwb,hcmnb, $
                               hcme1phase,hcmwbphase,hcmnbphase

IF num_lambda_filter EQ 5 THEN BEGIN
  hcme1phase = DBLARR(num_lambda_filter)
  HCME1phase[4] = DOUBLE((HCME1+12)*6 MOD 360)*!DPI/180.0d0 ;I0
  HCME1phase[3] = DOUBLE((HCME1+6 )*6 MOD 360)*!DPI/180.0d0 ;I1
  HCME1phase[2] = DOUBLE((HCME1+0 )*6 MOD 360)*!DPI/180.0d0 ;I2
  HCME1phase[1] = DOUBLE((HCME1-6 )*6 MOD 360)*!DPI/180.0d0 ;I3
  HCME1phase[0] = DOUBLE((HCME1-12)*6 MOD 360)*!DPI/180.0d0 ;I4

  hcmwbphase = DBLARR(num_lambda_filter)
  HCMWBphase[4] = DOUBLE((HCMWB-24)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[3] = DOUBLE((HCMWB-12)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[2] = DOUBLE((HCMWB+0 )*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[1] = DOUBLE((HCMWB+12)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[0] = DOUBLE((HCMWB+24)*6 MOD 360)*!DPI/180.0d0

  hcmnbphase = DBLARR(num_lambda_filter)
  HCMNBphase[4] = DOUBLE((HCMNB+12)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[3] = DOUBLE((HCMNB-24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[2] = DOUBLE((HCMNB+0 )*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[1] = DOUBLE((HCMNB+24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[0] = DOUBLE((HCMNB-12)*6 MOD 360)*!DPI/180.0d0
ENDIF

IF num_lambda_filter EQ 6 THEN BEGIN
  hcme1phase = DBLARR(num_lambda_filter)
  HCME1phase[5] = DOUBLE((HCME1+15)*6 MOD 360)*!DPI/180.0d0 ;I0
  HCME1phase[4] = DOUBLE((HCME1+9 )*6 MOD 360)*!DPI/180.0d0 ;I1
  HCME1phase[3] = DOUBLE((HCME1+3 )*6 MOD 360)*!DPI/180.0d0 ;I2
  HCME1phase[2] = DOUBLE((HCME1-3 )*6 MOD 360)*!DPI/180.0d0 ;I3
  HCME1phase[1] = DOUBLE((HCME1-9 )*6 MOD 360)*!DPI/180.0d0 ;I4
  HCME1phase[0] = DOUBLE((HCME1-15)*6 MOD 360)*!DPI/180.0d0 ;I5
  
  hcmwbphase = DBLARR(num_lambda_filter)
  HCMWBphase[5] = DOUBLE((HCMWB-30)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[4] = DOUBLE((HCMWB-18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[3] = DOUBLE((HCMWB-6 )*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[2] = DOUBLE((HCMWB+6 )*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[1] = DOUBLE((HCMWB+18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[0] = DOUBLE((HCMWB-30)*6 MOD 360)*!DPI/180.0d0
  
  hcmnbphase = DBLARR(num_lambda_filter)
  HCMNBphase[5] = DOUBLE((HCMNB-0 )*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[4] = DOUBLE((HCMNB+24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[3] = DOUBLE((HCMNB-12)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[2] = DOUBLE((HCMNB+12)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[1] = DOUBLE((HCMNB-24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[0] = DOUBLE((HCMNB+0 )*6 MOD 360)*!DPI/180.0d0
ENDIF

IF num_lambda_filter EQ 8 THEN BEGIN
  hcme1phase = DBLARR(num_lambda_filter)
  HCME1phase[7] = DOUBLE((HCME1+21)*6 MOD 360)*!DPI/180.0d0 ;I0
  HCME1phase[6] = DOUBLE((HCME1+15)*6 MOD 360)*!DPI/180.0d0 ;I1
  HCME1phase[5] = DOUBLE((HCME1+9 )*6 MOD 360)*!DPI/180.0d0 ;I2
  HCME1phase[4] = DOUBLE((HCME1+3 )*6 MOD 360)*!DPI/180.0d0 ;I3
  HCME1phase[3] = DOUBLE((HCME1-3 )*6 MOD 360)*!DPI/180.0d0 ;I4
  HCME1phase[2] = DOUBLE((HCME1-9 )*6 MOD 360)*!DPI/180.0d0 ;I5
  HCME1phase[1] = DOUBLE((HCME1-15)*6 MOD 360)*!DPI/180.0d0 ;I6
  HCME1phase[0] = DOUBLE((HCME1-21)*6 MOD 360)*!DPI/180.0d0 ;I7

  hcmwbphase = DBLARR(num_lambda_filter)
  HCMWBphase[7] = DOUBLE((HCMWB+18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[6] = DOUBLE((HCMWB-30)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[5] = DOUBLE((HCMWB-18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[4] = DOUBLE((HCMWB-6 )*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[3] = DOUBLE((HCMWB+6 )*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[2] = DOUBLE((HCMWB+18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[1] = DOUBLE((HCMWB-30)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[0] = DOUBLE((HCMWB-18)*6 MOD 360)*!DPI/180.0d0

  hcmnbphase = DBLARR(num_lambda_filter)
  HCMNBphase[7] = DOUBLE((HCMNB-24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[6] = DOUBLE((HCMNB-0 )*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[5] = DOUBLE((HCMNB+24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[4] = DOUBLE((HCMNB-12)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[3] = DOUBLE((HCMNB+12)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[2] = DOUBLE((HCMNB-24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[1] = DOUBLE((HCMNB+0 )*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[0] = DOUBLE((HCMNB+24)*6 MOD 360)*!DPI/180.0d0
ENDIF

IF num_lambda_filter EQ 10 THEN BEGIN
  hcme1phase = DBLARR(num_lambda_filter)
  HCME1phase[9] = DOUBLE((HCME1+27)*6 MOD 360)*!DPI/180.0d0 ;I0
  HCME1phase[8] = DOUBLE((HCME1+21)*6 MOD 360)*!DPI/180.0d0 ;I1
  HCME1phase[7] = DOUBLE((HCME1+15)*6 MOD 360)*!DPI/180.0d0 ;I2
  HCME1phase[6] = DOUBLE((HCME1+9 )*6 MOD 360)*!DPI/180.0d0 ;I3
  HCME1phase[5] = DOUBLE((HCME1+3 )*6 MOD 360)*!DPI/180.0d0 ;I4
  HCME1phase[4] = DOUBLE((HCME1-3 )*6 MOD 360)*!DPI/180.0d0 ;I5
  HCME1phase[3] = DOUBLE((HCME1-9 )*6 MOD 360)*!DPI/180.0d0 ;I6
  HCME1phase[2] = DOUBLE((HCME1-15)*6 MOD 360)*!DPI/180.0d0 ;I7
  HCME1phase[1] = DOUBLE((HCME1-21)*6 MOD 360)*!DPI/180.0d0 ;I8
  HCME1phase[0] = DOUBLE((HCME1-27)*6 MOD 360)*!DPI/180.0d0 ;I9

  hcmwbphase = DBLARR(num_lambda_filter)
  HCMWBphase[9] = DOUBLE((HCMWB+6 )*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[8] = DOUBLE((HCMWB+18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[7] = DOUBLE((HCMWB-30)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[6] = DOUBLE((HCMWB-18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[5] = DOUBLE((HCMWB-6 )*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[4] = DOUBLE((HCMWB+6 )*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[3] = DOUBLE((HCMWB+18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[2] = DOUBLE((HCMWB-30)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[1] = DOUBLE((HCMWB-18)*6 MOD 360)*!DPI/180.0d0
  HCMWBphase[0] = DOUBLE((HCMWB-6 )*6 MOD 360)*!DPI/180.0d0

  hcmnbphase = DBLARR(num_lambda_filter)
  HCMNBphase[9] = DOUBLE((HCMNB+12)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[8] = DOUBLE((HCMNB-24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[7] = DOUBLE((HCMNB-0 )*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[6] = DOUBLE((HCMNB+24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[5] = DOUBLE((HCMNB-12)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[4] = DOUBLE((HCMNB+12)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[3] = DOUBLE((HCMNB-24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[2] = DOUBLE((HCMNB+0 )*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[1] = DOUBLE((HCMNB+24)*6 MOD 360)*!DPI/180.0d0
  HCMNBphase[0] = DOUBLE((HCMNB-12)*6 MOD 360)*!DPI/180.0d0
ENDIF

END
